import 'package:dio/dio.dart';
import 'package:flutter/material.dart';

import '../model/posts_model.dart';

class ApiPage extends StatefulWidget {
  const ApiPage({super.key});

  @override
  State<ApiPage> createState() => _ApiPageState();
}

class _ApiPageState extends State<ApiPage> {
  Dio dio = Dio();

  //1st step endpiint and main url chutauney
  // 2nd step response check garney from postman.
  // 3rd step response lai serialize garauney so that dart can compile it easily.
  // 4th step model filder create garera lib vitra , tya dart file create garney and paste the model generated by quicktype.io
  // createe a function to generate whatever the type is of the model.

  List<PostsModel> mainPostsList = [];

  final mainUrl = 'https://jsonplaceholder.typicode.com';
  final endpoint = '/posts';

  Future<List<PostsModel>?> getPostsList() async {
    final response = await dio.get('$mainUrl$endpoint'); //setting up url.

    List<PostsModel> postsList = [];

    try {
      for (var element in response.data) {
        postsList.add(PostsModel.fromJson(element));
      }

      print(response.statusCode);

      return postsList;
    } catch (e) {
      print(e.toString());
      throw Exception(e.toString());
    }
  }

  Future fetchPostListFromApi() async {
    final allPostsData = await getPostsList();

    setState(() {
      mainPostsList = allPostsData ?? [];
    });
  }

  @override
  void initState() {
    super.initState();
    fetchPostListFromApi();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: SafeArea(
      child: SingleChildScrollView(
        child: Column(children: [
          mainPostsList.isEmpty
              ? const Center(child: CircularProgressIndicator())
              : ListView.builder(
                  shrinkWrap: true,
                  primary: false,
                  itemCount: mainPostsList.length,
                  itemBuilder: (context, index) {
                    return Column(
                      children: [
                        Text(mainPostsList[index].id.toString()),
                        Text(mainPostsList[index].title.toString()),
                        Text(mainPostsList[index].body.toString()),
                        const Divider(
                          height: 2,
                          thickness: 2,
                          color: Colors.black,
                        )
                      ],
                    );
                  })
        ]),
      ),
    ));
  }
}
